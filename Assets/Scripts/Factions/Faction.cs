//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using UnityEngine;

namespace AssemblyCSharp
{
		abstract public class Faction
		{
		public string name;
		public List<Unit> units;

				public Faction ()
				{
			units = new List<Unit>();
				}

		public abstract void initiate();

		public abstract void endTurn();

		public abstract void startTurn();
			//foreach(Unit unit in units){
			//	unit.mov = unit.maxMov;

		public void addUnit(Unit unit){
			unit.faction = this;
			units.Add(unit);
		}

		public void removeUnit(Unit unit){
			units.Remove(unit);
		}

		public Unit makeUnit(int x, int y){
			Tile tile = Grid.map.map[x,y];
			//UnityEngine.GameObject objectUnit = Instantiate(Loader.aStaticPrefab,new Vector3(x,y,0),Quaternion.identity); //object to convert from later.
			//GameObject unit = objectUnit as GameObject;
			Unit newUnit = MonoBehaviour.Instantiate(Grid.prefabLoader.baseUnit,new Vector3(x,y,0),Quaternion.identity) as Unit;//objectUnit as Unit; //reminder that the start function in unit is called after this function ends.
			addUnit(newUnit);
			tile.unit = newUnit;
			newUnit.setTile(tile);

			return newUnit;
		}

		public void restoreMove(){
			foreach (Unit unit in units){
				unit.mov = unit.maxMov;
			}
		}


		}
}

