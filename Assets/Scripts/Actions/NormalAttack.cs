//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
namespace AssemblyCSharp
{
		public class NormalAttack : Action
		{
		public int minRnge = 1;
		public int maxRnge = 1;
				public NormalAttack (Unit u)
				{
					type = "Attack";
					unit = u;
				}

		public override void display(){ //shows selectable tiles
			List<Tile> tiles = Grid.map.getTilesInRange(unit.tile.x,unit.tile.y,TileCosts.Flat,minRnge,maxRnge);
			foreach (Tile tile in tiles){
				tile.highlight(Highlight.ATTACKHIGHLIGHT);
			}
		}
		public override void activate(Tile tile){ //does the action
			if (tile.hasUnit())Controller.battle (unit,tile.unit);
			else return;
			unit.mov = 0;
			if (unit.faction.Equals(Grid.turnManager.factions[0])){ //if it was the player's unit.
				unit.deleteActionsMenu();
				unit.refreshVision();
				Grid.controller.endAction("finish");
			}
		}
		public override void clickedTile(Tile tile){	//input from user
			Grid.controller.endAction("cancel");
		}
		public override void rightClickedTile(Tile tile){ //input from user
			if(Grid.map.getTilesInRange(unit.tile.x,unit.tile.y,TileCosts.Flat,minRnge,maxRnge).Contains (tile)){
				activate(tile);
			}
		}
		public override float evaluate(){ //for AI use
			return 10f;
		}
		}
}

